/*
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

ext {
    gemfireVersion = '10.1.0'
    apachedsVersion = '2.0.0-M24'
    springShellVersion = '1.2.0.RELEASE'
    junitVersion = '5.8.1'
    log4jVersion = '2.22.1'
}

apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'dev.gemfire'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
      credentials {
        username "$gemfireReleaseRepoUser"
        password "$gemfireReleaseRepoPassword"
      }
      url "https://commercial-repo.pivotal.io/data3/gemfire-release-repo/gemfire"
    }
}

configurations {
    testImplementation.exclude group: "org.apache.directory.api", module: "api-ldap-schema-data"
}

dependencies {
    implementation "com.vmware.gemfire:gemfire-core:$gemfireVersion"
    implementation "com.vmware.gemfire:gemfire-logging:$gemfireVersion"
    testImplementation "org.apache.logging.log4j:log4j-core:$log4jVersion"
    testImplementation "org.springframework.shell:spring-shell:$springShellVersion"
    testImplementation "org.apache.directory.server:apacheds-all:$apachedsVersion"
    testImplementation "org.apache.directory.server:apacheds-core:$apachedsVersion"
    testImplementation "org.apache.directory.server:apacheds-server-integ:$apachedsVersion"
    testImplementation "org.apache.directory.server:apacheds-core-integ:$apachedsVersion"
    testImplementation "org.apache.directory.server:apacheds-server-jndi:$apachedsVersion"
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
}

task generateCerts() {
    doLast {
        exec {
            commandLine 'scripts/generateCerts.sh', 'gemfire'
        }
        exec {
            commandLine 'scripts/generateCerts.sh', 'ldap'
        }
    }
}
tasks.test.dependsOn("generateCerts")


